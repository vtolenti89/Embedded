
CameraSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000004c4  00000558  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080010a  0080010a  00000562  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000562  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000594  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a8  00000000  00000000  000005d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002a06  00000000  00000000  0000077c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001003  00000000  00000000  00003182  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c05  00000000  00000000  00004185  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f0  00000000  00000000  00004d8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009cb  00000000  00000000  0000507c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000877  00000000  00000000  00005a47  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  000062be  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ec       	ldi	r30, 0xC4	; 196
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 30       	cpi	r26, 0x0A	; 10
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e0       	ldi	r26, 0x0A	; 10
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ad 30       	cpi	r26, 0x0D	; 13
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 60 02 	jmp	0x4c0	; 0x4c0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
volatile unsigned int mili;
volatile unsigned int sec;


int main(void)
{
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	00 d0       	rcall	.+0      	; 0xac <main+0x6>
  ac:	00 d0       	rcall	.+0      	; 0xae <main+0x8>
  ae:	cd b7       	in	r28, 0x3d	; 61
  b0:	de b7       	in	r29, 0x3e	; 62
	systemLevel sys;
  b2:	ce 01       	movw	r24, r28
  b4:	01 96       	adiw	r24, 0x01	; 1
  b6:	0e 94 81 01 	call	0x302	; 0x302 <_ZN11systemLevelC1Ev>
	sys.setUp();
  ba:	ce 01       	movw	r24, r28
  bc:	01 96       	adiw	r24, 0x01	; 1
  be:	0e 94 82 01 	call	0x304	; 0x304 <_ZN11systemLevel5setUpEv>
	
	while (1) 
	{
		sys.takePhoto();
  c2:	ce 01       	movw	r24, r28
  c4:	01 96       	adiw	r24, 0x01	; 1
  c6:	0e 94 9d 01 	call	0x33a	; 0x33a <_ZN11systemLevel9takePhotoEv>
    }
  ca:	fb cf       	rjmp	.-10     	; 0xc2 <main+0x1c>

000000cc <_ZN11i2cProtocol5twiRdEh>:
	errorFlag = _errorFlag;	
}

uint8_t i2cProtocol::getErrorFlag(){
	return errorFlag;
}
  cc:	dc 01       	movw	r26, r24
  ce:	66 23       	and	r22, r22
  d0:	91 f0       	breq	.+36     	; 0xf6 <_ZN11i2cProtocol5twiRdEh+0x2a>
  d2:	84 e8       	ldi	r24, 0x84	; 132
  d4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  d8:	ec eb       	ldi	r30, 0xBC	; 188
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	90 81       	ld	r25, Z
  de:	99 23       	and	r25, r25
  e0:	ec f7       	brge	.-6      	; 0xdc <_ZN11i2cProtocol5twiRdEh+0x10>
  e2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  e6:	98 7f       	andi	r25, 0xF8	; 248
  e8:	98 35       	cpi	r25, 0x58	; 88
  ea:	11 f0       	breq	.+4      	; 0xf0 <_ZN11i2cProtocol5twiRdEh+0x24>
  ec:	85 e0       	ldi	r24, 0x05	; 5
  ee:	8c 93       	st	X, r24
  f0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
  f4:	08 95       	ret
  f6:	84 ec       	ldi	r24, 0xC4	; 196
  f8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  fc:	ec eb       	ldi	r30, 0xBC	; 188
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	90 81       	ld	r25, Z
 102:	99 23       	and	r25, r25
 104:	ec f7       	brge	.-6      	; 0x100 <_ZN11i2cProtocol5twiRdEh+0x34>
 106:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 10a:	98 7f       	andi	r25, 0xF8	; 248
 10c:	90 35       	cpi	r25, 0x50	; 80
 10e:	11 f0       	breq	.+4      	; 0x114 <_ZN11i2cProtocol5twiRdEh+0x48>
 110:	85 e0       	ldi	r24, 0x05	; 5
 112:	8c 93       	st	X, r24
 114:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 118:	08 95       	ret

0000011a <_ZN11i2cProtocol8twiStartEv>:
 11a:	dc 01       	movw	r26, r24
 11c:	94 ea       	ldi	r25, 0xA4	; 164
 11e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 122:	ec eb       	ldi	r30, 0xBC	; 188
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	90 81       	ld	r25, Z
 128:	99 23       	and	r25, r25
 12a:	ec f7       	brge	.-6      	; 0x126 <_ZN11i2cProtocol8twiStartEv+0xc>
 12c:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 130:	98 7f       	andi	r25, 0xF8	; 248
 132:	98 30       	cpi	r25, 0x08	; 8
 134:	11 f0       	breq	.+4      	; 0x13a <_ZN11i2cProtocol8twiStartEv+0x20>
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	8c 93       	st	X, r24
 13a:	08 95       	ret

0000013c <_ZN11i2cProtocol7twiAddrEhh>:
 13c:	dc 01       	movw	r26, r24
 13e:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 142:	94 e8       	ldi	r25, 0x84	; 132
 144:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 148:	ec eb       	ldi	r30, 0xBC	; 188
 14a:	f0 e0       	ldi	r31, 0x00	; 0
 14c:	90 81       	ld	r25, Z
 14e:	99 23       	and	r25, r25
 150:	ec f7       	brge	.-6      	; 0x14c <_ZN11i2cProtocol7twiAddrEhh+0x10>
 152:	20 91 b9 00 	lds	r18, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 156:	28 7f       	andi	r18, 0xF8	; 248
 158:	30 e0       	ldi	r19, 0x00	; 0
 15a:	50 e0       	ldi	r21, 0x00	; 0
 15c:	24 17       	cp	r18, r20
 15e:	35 07       	cpc	r19, r21
 160:	11 f0       	breq	.+4      	; 0x166 <_ZN11i2cProtocol7twiAddrEhh+0x2a>
 162:	82 e0       	ldi	r24, 0x02	; 2
 164:	8c 93       	st	X, r24
 166:	08 95       	ret

00000168 <_ZN11i2cProtocol12twiWriteByteEhh>:
 168:	dc 01       	movw	r26, r24
 16a:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 16e:	94 e8       	ldi	r25, 0x84	; 132
 170:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 174:	ec eb       	ldi	r30, 0xBC	; 188
 176:	f0 e0       	ldi	r31, 0x00	; 0
 178:	90 81       	ld	r25, Z
 17a:	99 23       	and	r25, r25
 17c:	ec f7       	brge	.-6      	; 0x178 <_ZN11i2cProtocol12twiWriteByteEhh+0x10>
 17e:	20 91 b9 00 	lds	r18, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 182:	28 7f       	andi	r18, 0xF8	; 248
 184:	30 e0       	ldi	r19, 0x00	; 0
 186:	50 e0       	ldi	r21, 0x00	; 0
 188:	24 17       	cp	r18, r20
 18a:	35 07       	cpc	r19, r21
 18c:	11 f0       	breq	.+4      	; 0x192 <_ZN11i2cProtocol12twiWriteByteEhh+0x2a>
 18e:	83 e0       	ldi	r24, 0x03	; 3
 190:	8c 93       	st	X, r24
 192:	08 95       	ret

00000194 <_ZN11i2cProtocol5writeEhhh>:
 194:	ff 92       	push	r15
 196:	0f 93       	push	r16
 198:	1f 93       	push	r17
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	ec 01       	movw	r28, r24
 1a0:	16 2f       	mov	r17, r22
 1a2:	f4 2e       	mov	r15, r20
 1a4:	02 2f       	mov	r16, r18
 1a6:	8f e9       	ldi	r24, 0x9F	; 159
 1a8:	9f e0       	ldi	r25, 0x0F	; 15
 1aa:	01 97       	sbiw	r24, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <_ZN11i2cProtocol5writeEhhh+0x16>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <_ZN11i2cProtocol5writeEhhh+0x1c>
 1b0:	00 00       	nop
 1b2:	ce 01       	movw	r24, r28
 1b4:	0e 94 8d 00 	call	0x11a	; 0x11a <_ZN11i2cProtocol8twiStartEv>
 1b8:	61 2f       	mov	r22, r17
 1ba:	66 0f       	add	r22, r22
 1bc:	42 e0       	ldi	r20, 0x02	; 2
 1be:	ce 01       	movw	r24, r28
 1c0:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN11i2cProtocol7twiAddrEhh>
 1c4:	48 e2       	ldi	r20, 0x28	; 40
 1c6:	6f 2d       	mov	r22, r15
 1c8:	ce 01       	movw	r24, r28
 1ca:	0e 94 b4 00 	call	0x168	; 0x168 <_ZN11i2cProtocol12twiWriteByteEhh>
 1ce:	48 e2       	ldi	r20, 0x28	; 40
 1d0:	60 2f       	mov	r22, r16
 1d2:	ce 01       	movw	r24, r28
 1d4:	0e 94 b4 00 	call	0x168	; 0x168 <_ZN11i2cProtocol12twiWriteByteEhh>
 1d8:	84 e9       	ldi	r24, 0x94	; 148
 1da:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 1de:	df 91       	pop	r29
 1e0:	cf 91       	pop	r28
 1e2:	1f 91       	pop	r17
 1e4:	0f 91       	pop	r16
 1e6:	ff 90       	pop	r15
 1e8:	08 95       	ret

000001ea <_ZN11i2cProtocol4readEhh>:
 1ea:	ef 92       	push	r14
 1ec:	ff 92       	push	r15
 1ee:	0f 93       	push	r16
 1f0:	1f 93       	push	r17
 1f2:	cf 93       	push	r28
 1f4:	df 93       	push	r29
 1f6:	ec 01       	movw	r28, r24
 1f8:	16 2f       	mov	r17, r22
 1fa:	04 2f       	mov	r16, r20
 1fc:	0e 94 8d 00 	call	0x11a	; 0x11a <_ZN11i2cProtocol8twiStartEv>
 200:	61 2f       	mov	r22, r17
 202:	66 0f       	add	r22, r22
 204:	42 e0       	ldi	r20, 0x02	; 2
 206:	ce 01       	movw	r24, r28
 208:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN11i2cProtocol7twiAddrEhh>
 20c:	48 e2       	ldi	r20, 0x28	; 40
 20e:	60 2f       	mov	r22, r16
 210:	ce 01       	movw	r24, r28
 212:	0e 94 b4 00 	call	0x168	; 0x168 <_ZN11i2cProtocol12twiWriteByteEhh>
 216:	0f 2e       	mov	r0, r31
 218:	fc eb       	ldi	r31, 0xBC	; 188
 21a:	ef 2e       	mov	r14, r31
 21c:	f1 2c       	mov	r15, r1
 21e:	f0 2d       	mov	r31, r0
 220:	04 e9       	ldi	r16, 0x94	; 148
 222:	f7 01       	movw	r30, r14
 224:	00 83       	st	Z, r16
 226:	8f e9       	ldi	r24, 0x9F	; 159
 228:	9f e0       	ldi	r25, 0x0F	; 15
 22a:	01 97       	sbiw	r24, 0x01	; 1
 22c:	f1 f7       	brne	.-4      	; 0x22a <_ZN11i2cProtocol4readEhh+0x40>
 22e:	00 c0       	rjmp	.+0      	; 0x230 <_ZN11i2cProtocol4readEhh+0x46>
 230:	00 00       	nop
 232:	ce 01       	movw	r24, r28
 234:	0e 94 8d 00 	call	0x11a	; 0x11a <_ZN11i2cProtocol8twiStartEv>
 238:	61 2f       	mov	r22, r17
 23a:	66 0f       	add	r22, r22
 23c:	61 60       	ori	r22, 0x01	; 1
 23e:	44 e0       	ldi	r20, 0x04	; 4
 240:	ce 01       	movw	r24, r28
 242:	0e 94 9e 00 	call	0x13c	; 0x13c <_ZN11i2cProtocol7twiAddrEhh>
 246:	61 e0       	ldi	r22, 0x01	; 1
 248:	ce 01       	movw	r24, r28
 24a:	0e 94 66 00 	call	0xcc	; 0xcc <_ZN11i2cProtocol5twiRdEh>
 24e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
 252:	f7 01       	movw	r30, r14
 254:	00 83       	st	Z, r16
 256:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
 25a:	df 91       	pop	r29
 25c:	cf 91       	pop	r28
 25e:	1f 91       	pop	r17
 260:	0f 91       	pop	r16
 262:	ff 90       	pop	r15
 264:	ef 90       	pop	r14
 266:	08 95       	ret

00000268 <_ZN11i2cProtocol5setUpEv>:
	//set up twi for 100khz
    //TWSR &= ~3;//disable prescaler for TWI
	
	//Setting prescaling
	//TWSR &= ~ ((1 << TWPS0) | (1 << TWPS1)); //No prescaling
	TWSR |= (1 << TWPS0); // 4 Prescaling
 268:	e9 eb       	ldi	r30, 0xB9	; 185
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	80 81       	ld	r24, Z
 26e:	81 60       	ori	r24, 0x01	; 1
 270:	80 83       	st	Z, r24
	
	//freq = CPU / (16 + 2*TWBR * prescaler)
    TWBR = 72;//set to 100khz		
 272:	88 e4       	ldi	r24, 0x48	; 72
 274:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
 278:	08 95       	ret

0000027a <_ZN11spiProtocol10masterInitEv>:


void spiProtocol::masterInit(){
	//initiating SPI communication
	/* Set MOSI and SCK output, all others input */
	DDRB|= (1 << MOSI)|(1 << SCK);
 27a:	84 b1       	in	r24, 0x04	; 4
 27c:	88 62       	ori	r24, 0x28	; 40
 27e:	84 b9       	out	0x04, r24	; 4
	DDRB&=~ (1 << MISO);
 280:	24 98       	cbi	0x04, 4	; 4
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
 282:	81 e5       	ldi	r24, 0x51	; 81
 284:	8c bd       	out	0x2c, r24	; 44
 286:	08 95       	ret

00000288 <_ZN11spiProtocol13masterTrasmitEc>:
}

void spiProtocol::masterTrasmit(char _cData)
{
	/* Start transmission */
	SPDR = _cData;
 288:	6e bd       	out	0x2e, r22	; 46
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)))
 28a:	0d b4       	in	r0, 0x2d	; 45
 28c:	07 fe       	sbrs	r0, 7
 28e:	fd cf       	rjmp	.-6      	; 0x28a <_ZN11spiProtocol13masterTrasmitEc+0x2>
	;
}
 290:	08 95       	ret

00000292 <_ZN12uartProtocol5setUpEj>:
#define MYUBRR FOSC/16/BAUD-1

void uartProtocol::setUp(unsigned int ubrr){
	/*Set baud rate */
	//UBRR0H = (unsigned char)(ubrr>>8);
	UBRR0H = (unsigned char)(MYUBRR>>8);
 292:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	//UBRR0L = (unsigned char)ubrr;
	UBRR0L = (unsigned char)MYUBRR;
 296:	8f ef       	ldi	r24, 0xFF	; 255
 298:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	/*Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 29c:	88 e1       	ldi	r24, 0x18	; 24
 29e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);
 2a2:	8e e0       	ldi	r24, 0x0E	; 14
 2a4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 2a8:	08 95       	ret

000002aa <_ZN12uartProtocol8transmitEj>:
	;
	// Put data into buffer, sends the data
	UDRn = data;
	//Sending Frames with 5 to 8 Data Bit END
	*/
	while ( !( UCSR0A & (1<<UDRE0)) )
 2aa:	e0 ec       	ldi	r30, 0xC0	; 192
 2ac:	f0 e0       	ldi	r31, 0x00	; 0
 2ae:	80 81       	ld	r24, Z
 2b0:	85 ff       	sbrs	r24, 5
 2b2:	fd cf       	rjmp	.-6      	; 0x2ae <_ZN12uartProtocol8transmitEj+0x4>
	;
	// Put data into buffer, sends the data
	UDR0 = data;
 2b4:	60 93 c6 00 	sts	0x00C6, r22	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 2b8:	08 95       	ret

000002ba <_ZN6camera5setUpEv>:
	  
	  OCR2A = 0;//(F_CPU)/(2*(X+1))
	 */
	
	// Set up the 8MHz output
	DDRD |= (1 << 5);//pin 03
 2ba:	55 9a       	sbi	0x0a, 5	; 10
	TCCR0A = _BV(COM0A1) | _BV(COM0B1) | _BV(WGM01) | _BV(WGM00);
 2bc:	83 ea       	ldi	r24, 0xA3	; 163
 2be:	84 bd       	out	0x24, r24	; 36
	TCCR0B = _BV(WGM02) | _BV(CS00);
 2c0:	89 e0       	ldi	r24, 0x09	; 9
 2c2:	85 bd       	out	0x25, r24	; 37
	OCR0A = 1;
 2c4:	81 e0       	ldi	r24, 0x01	; 1
 2c6:	87 bd       	out	0x27, r24	; 39
	OCR0B = 0;
 2c8:	18 bc       	out	0x28, r1	; 40
 2ca:	08 95       	ret

000002cc <_ZN11sdcardClass5setUpEv>:
#include <stdint.h>
#include "../Protocols/spi.h"

#define CS	7

void sdcardClass::setUp(){
 2cc:	08 95       	ret

000002ce <_ZN11sdcardClass5writeEc>:
	
}

void sdcardClass::write(char _data){
 2ce:	1f 93       	push	r17
 2d0:	cf 93       	push	r28
 2d2:	df 93       	push	r29
 2d4:	ec 01       	movw	r28, r24
 2d6:	16 2f       	mov	r17, r22
	DDRD|=(1 << CS);
 2d8:	57 9a       	sbi	0x0a, 7	; 10
	PORTD&=~(1 << CS);
 2da:	5f 98       	cbi	0x0b, 7	; 11
	spi.masterInit();
 2dc:	0e 94 3d 01 	call	0x27a	; 0x27a <_ZN11spiProtocol10masterInitEv>
	spi.masterTrasmit(_data);
 2e0:	61 2f       	mov	r22, r17
 2e2:	ce 01       	movw	r24, r28
 2e4:	0e 94 44 01 	call	0x288	; 0x288 <_ZN11spiProtocol13masterTrasmitEc>
	PORTD|=(1 << CS);
 2e8:	5f 9a       	sbi	0x0b, 7	; 11
}
 2ea:	df 91       	pop	r29
 2ec:	cf 91       	pop	r28
 2ee:	1f 91       	pop	r17
 2f0:	08 95       	ret

000002f2 <_ZN9wlanClass5setUpEv>:
 */ 
#include "wlan.h"
#include "../Protocols/uart.h"

void wlanClass::setUp(){
	uart.setUp(1);
 2f2:	61 e0       	ldi	r22, 0x01	; 1
 2f4:	70 e0       	ldi	r23, 0x00	; 0
 2f6:	0e 94 49 01 	call	0x292	; 0x292 <_ZN12uartProtocol5setUpEj>
 2fa:	08 95       	ret

000002fc <_ZN9wlanClass8transmitEj>:
}

void wlanClass::transmit(unsigned int _data){
	uart.transmit(_data);
 2fc:	0e 94 55 01 	call	0x2aa	; 0x2aa <_ZN12uartProtocol8transmitEj>
 300:	08 95       	ret

00000302 <_ZN11systemLevelC1Ev>:


char test [] = "abcdefgh";
int i;

	systemLevel::systemLevel () {
 302:	08 95       	ret

00000304 <_ZN11systemLevel5setUpEv>:
				
}



void systemLevel::setUp(){
 304:	cf 93       	push	r28
 306:	df 93       	push	r29
 308:	ec 01       	movw	r28, r24
	//Setting up outputs
	DDRB=0xFF;
 30a:	8f ef       	ldi	r24, 0xFF	; 255
 30c:	84 b9       	out	0x04, r24	; 4
	DDRC=0xFF;
 30e:	87 b9       	out	0x07, r24	; 7
	DDRD=0xFF;
 310:	8a b9       	out	0x0a, r24	; 10
	
	//i2cProtocol i2c;
	//camera cam;
	
	// cleaning and enabling global interrupts
	cli();
 312:	f8 94       	cli
	sei();
 314:	78 94       	sei
	
	//Setting up the hardware
	i2c.setUp();
 316:	ce 01       	movw	r24, r28
 318:	0e 94 34 01 	call	0x268	; 0x268 <_ZN11i2cProtocol5setUpEv>
	cam.setUp();
 31c:	ce 01       	movw	r24, r28
 31e:	01 96       	adiw	r24, 0x01	; 1
 320:	0e 94 5d 01 	call	0x2ba	; 0x2ba <_ZN6camera5setUpEv>
	sdcard.setUp();
 324:	ce 01       	movw	r24, r28
 326:	02 96       	adiw	r24, 0x02	; 2
 328:	0e 94 66 01 	call	0x2cc	; 0x2cc <_ZN11sdcardClass5setUpEv>
	wlan.setUp();
 32c:	ce 01       	movw	r24, r28
 32e:	03 96       	adiw	r24, 0x03	; 3
 330:	0e 94 79 01 	call	0x2f2	; 0x2f2 <_ZN9wlanClass5setUpEv>
	
}
 334:	df 91       	pop	r29
 336:	cf 91       	pop	r28
 338:	08 95       	ret

0000033a <_ZN11systemLevel9takePhotoEv>:


void systemLevel::takePhoto(){
 33a:	cf 93       	push	r28
 33c:	df 93       	push	r29
 33e:	ec 01       	movw	r28, r24
	i2c.write(CAM_ADDRESS, 0x11, 0x81);
 340:	21 e8       	ldi	r18, 0x81	; 129
 342:	41 e1       	ldi	r20, 0x11	; 17
 344:	61 e2       	ldi	r22, 0x21	; 33
 346:	0e 94 ca 00 	call	0x194	; 0x194 <_ZN11i2cProtocol5writeEhhh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 34a:	8f e9       	ldi	r24, 0x9F	; 159
 34c:	9f e0       	ldi	r25, 0x0F	; 15
 34e:	01 97       	sbiw	r24, 0x01	; 1
 350:	f1 f7       	brne	.-4      	; 0x34e <_ZN11systemLevel9takePhotoEv+0x14>
 352:	00 c0       	rjmp	.+0      	; 0x354 <_ZN11systemLevel9takePhotoEv+0x1a>
 354:	00 00       	nop
	_delay_ms(1);
	//val = i2c.read(CAM_ADDRESS,0x11);
	i2c.read(CAM_ADDRESS,0x11);
 356:	41 e1       	ldi	r20, 0x11	; 17
 358:	61 e2       	ldi	r22, 0x21	; 33
 35a:	ce 01       	movw	r24, r28
 35c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN11i2cProtocol4readEhh>
 360:	8f e3       	ldi	r24, 0x3F	; 63
 362:	9c e9       	ldi	r25, 0x9C	; 156
 364:	01 97       	sbiw	r24, 0x01	; 1
 366:	f1 f7       	brne	.-4      	; 0x364 <_ZN11systemLevel9takePhotoEv+0x2a>
 368:	00 c0       	rjmp	.+0      	; 0x36a <_ZN11systemLevel9takePhotoEv+0x30>
 36a:	00 00       	nop
	//val = i2c.read(CAM_ADDRESS_R,val++);
	_delay_ms(10);
	//sdcard.read();
	//sdcard.write('a');
	sdcard.write(test[i]);
 36c:	e0 91 0b 01 	lds	r30, 0x010B	; 0x80010b <i>
 370:	f0 91 0c 01 	lds	r31, 0x010C	; 0x80010c <i+0x1>
 374:	e0 50       	subi	r30, 0x00	; 0
 376:	ff 4f       	sbci	r31, 0xFF	; 255
 378:	60 81       	ld	r22, Z
 37a:	ce 01       	movw	r24, r28
 37c:	02 96       	adiw	r24, 0x02	; 2
 37e:	0e 94 67 01 	call	0x2ce	; 0x2ce <_ZN11sdcardClass5writeEc>
	i++;
 382:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <i>
 386:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <i+0x1>
 38a:	01 96       	adiw	r24, 0x01	; 1
	if (i>= 8)
 38c:	88 30       	cpi	r24, 0x08	; 8
 38e:	91 05       	cpc	r25, r1
 390:	2c f4       	brge	.+10     	; 0x39c <_ZN11systemLevel9takePhotoEv+0x62>
	//val = i2c.read(CAM_ADDRESS_R,val++);
	_delay_ms(10);
	//sdcard.read();
	//sdcard.write('a');
	sdcard.write(test[i]);
	i++;
 392:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <i+0x1>
 396:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <i>
 39a:	04 c0       	rjmp	.+8      	; 0x3a4 <_ZN11systemLevel9takePhotoEv+0x6a>
	if (i>= 8)
	i=0;
 39c:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <i+0x1>
 3a0:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <i>
 3a4:	8f e3       	ldi	r24, 0x3F	; 63
 3a6:	9c e9       	ldi	r25, 0x9C	; 156
 3a8:	01 97       	sbiw	r24, 0x01	; 1
 3aa:	f1 f7       	brne	.-4      	; 0x3a8 <_ZN11systemLevel9takePhotoEv+0x6e>
 3ac:	00 c0       	rjmp	.+0      	; 0x3ae <_ZN11systemLevel9takePhotoEv+0x74>
 3ae:	00 00       	nop
	_delay_ms(10);
	wlan.transmit(0x01);
 3b0:	23 96       	adiw	r28, 0x03	; 3
 3b2:	61 e0       	ldi	r22, 0x01	; 1
 3b4:	70 e0       	ldi	r23, 0x00	; 0
 3b6:	ce 01       	movw	r24, r28
 3b8:	0e 94 7e 01 	call	0x2fc	; 0x2fc <_ZN9wlanClass8transmitEj>
 3bc:	8f e3       	ldi	r24, 0x3F	; 63
 3be:	9c e9       	ldi	r25, 0x9C	; 156
 3c0:	01 97       	sbiw	r24, 0x01	; 1
 3c2:	f1 f7       	brne	.-4      	; 0x3c0 <_ZN11systemLevel9takePhotoEv+0x86>
 3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <_ZN11systemLevel9takePhotoEv+0x8c>
 3c6:	00 00       	nop
	_delay_ms(10);
	wlan.transmit(0x10);
 3c8:	60 e1       	ldi	r22, 0x10	; 16
 3ca:	70 e0       	ldi	r23, 0x00	; 0
 3cc:	ce 01       	movw	r24, r28
 3ce:	0e 94 7e 01 	call	0x2fc	; 0x2fc <_ZN9wlanClass8transmitEj>
 3d2:	8f e3       	ldi	r24, 0x3F	; 63
 3d4:	9c e9       	ldi	r25, 0x9C	; 156
 3d6:	01 97       	sbiw	r24, 0x01	; 1
 3d8:	f1 f7       	brne	.-4      	; 0x3d6 <_ZN11systemLevel9takePhotoEv+0x9c>
 3da:	00 c0       	rjmp	.+0      	; 0x3dc <_ZN11systemLevel9takePhotoEv+0xa2>
 3dc:	00 00       	nop
	_delay_ms(10);
	wlan.transmit(0x11);
 3de:	61 e1       	ldi	r22, 0x11	; 17
 3e0:	70 e0       	ldi	r23, 0x00	; 0
 3e2:	ce 01       	movw	r24, r28
 3e4:	0e 94 7e 01 	call	0x2fc	; 0x2fc <_ZN9wlanClass8transmitEj>
 3e8:	8f e3       	ldi	r24, 0x3F	; 63
 3ea:	9c e9       	ldi	r25, 0x9C	; 156
 3ec:	01 97       	sbiw	r24, 0x01	; 1
 3ee:	f1 f7       	brne	.-4      	; 0x3ec <_ZN11systemLevel9takePhotoEv+0xb2>
 3f0:	00 c0       	rjmp	.+0      	; 0x3f2 <_ZN11systemLevel9takePhotoEv+0xb8>
 3f2:	00 00       	nop
	_delay_ms(10);
	wlan.transmit(0x18);
 3f4:	68 e1       	ldi	r22, 0x18	; 24
 3f6:	70 e0       	ldi	r23, 0x00	; 0
 3f8:	ce 01       	movw	r24, r28
 3fa:	0e 94 7e 01 	call	0x2fc	; 0x2fc <_ZN9wlanClass8transmitEj>
 3fe:	8f e3       	ldi	r24, 0x3F	; 63
 400:	9c e9       	ldi	r25, 0x9C	; 156
 402:	01 97       	sbiw	r24, 0x01	; 1
 404:	f1 f7       	brne	.-4      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 406:	00 c0       	rjmp	.+0      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 408:	00 00       	nop
	_delay_ms(10);
	wlan.transmit(0x81);
 40a:	61 e8       	ldi	r22, 0x81	; 129
 40c:	70 e0       	ldi	r23, 0x00	; 0
 40e:	ce 01       	movw	r24, r28
 410:	0e 94 7e 01 	call	0x2fc	; 0x2fc <_ZN9wlanClass8transmitEj>
 414:	8f e3       	ldi	r24, 0x3F	; 63
 416:	9c e9       	ldi	r25, 0x9C	; 156
 418:	01 97       	sbiw	r24, 0x01	; 1
 41a:	f1 f7       	brne	.-4      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 41c:	00 c0       	rjmp	.+0      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 41e:	00 00       	nop
	_delay_ms(10);
	wlan.transmit(0x22);
 420:	62 e2       	ldi	r22, 0x22	; 34
 422:	70 e0       	ldi	r23, 0x00	; 0
 424:	ce 01       	movw	r24, r28
 426:	0e 94 7e 01 	call	0x2fc	; 0x2fc <_ZN9wlanClass8transmitEj>
 42a:	8f e3       	ldi	r24, 0x3F	; 63
 42c:	9c e9       	ldi	r25, 0x9C	; 156
 42e:	01 97       	sbiw	r24, 0x01	; 1
 430:	f1 f7       	brne	.-4      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 432:	00 c0       	rjmp	.+0      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 434:	00 00       	nop
	_delay_ms(10);
	wlan.transmit(0x33);
 436:	63 e3       	ldi	r22, 0x33	; 51
 438:	70 e0       	ldi	r23, 0x00	; 0
 43a:	ce 01       	movw	r24, r28
 43c:	0e 94 7e 01 	call	0x2fc	; 0x2fc <_ZN9wlanClass8transmitEj>
 440:	8f e3       	ldi	r24, 0x3F	; 63
 442:	9c e9       	ldi	r25, 0x9C	; 156
 444:	01 97       	sbiw	r24, 0x01	; 1
 446:	f1 f7       	brne	.-4      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 448:	00 c0       	rjmp	.+0      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 44a:	00 00       	nop
	_delay_ms(10);
	wlan.transmit(0x44);
 44c:	64 e4       	ldi	r22, 0x44	; 68
 44e:	70 e0       	ldi	r23, 0x00	; 0
 450:	ce 01       	movw	r24, r28
 452:	0e 94 7e 01 	call	0x2fc	; 0x2fc <_ZN9wlanClass8transmitEj>
 456:	8f e3       	ldi	r24, 0x3F	; 63
 458:	9c e9       	ldi	r25, 0x9C	; 156
 45a:	01 97       	sbiw	r24, 0x01	; 1
 45c:	f1 f7       	brne	.-4      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 45e:	00 c0       	rjmp	.+0      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 460:	00 00       	nop
	_delay_ms(10);
	wlan.transmit(0x55);
 462:	65 e5       	ldi	r22, 0x55	; 85
 464:	70 e0       	ldi	r23, 0x00	; 0
 466:	ce 01       	movw	r24, r28
 468:	0e 94 7e 01 	call	0x2fc	; 0x2fc <_ZN9wlanClass8transmitEj>
 46c:	8f e3       	ldi	r24, 0x3F	; 63
 46e:	9c e9       	ldi	r25, 0x9C	; 156
 470:	01 97       	sbiw	r24, 0x01	; 1
 472:	f1 f7       	brne	.-4      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 474:	00 c0       	rjmp	.+0      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 476:	00 00       	nop
	_delay_ms(10);
	wlan.transmit(0x66);
 478:	66 e6       	ldi	r22, 0x66	; 102
 47a:	70 e0       	ldi	r23, 0x00	; 0
 47c:	ce 01       	movw	r24, r28
 47e:	0e 94 7e 01 	call	0x2fc	; 0x2fc <_ZN9wlanClass8transmitEj>
 482:	8f e3       	ldi	r24, 0x3F	; 63
 484:	9c e9       	ldi	r25, 0x9C	; 156
 486:	01 97       	sbiw	r24, 0x01	; 1
 488:	f1 f7       	brne	.-4      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 48a:	00 c0       	rjmp	.+0      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 48c:	00 00       	nop
	_delay_ms(10);
	wlan.transmit(0x77);
 48e:	67 e7       	ldi	r22, 0x77	; 119
 490:	70 e0       	ldi	r23, 0x00	; 0
 492:	ce 01       	movw	r24, r28
 494:	0e 94 7e 01 	call	0x2fc	; 0x2fc <_ZN9wlanClass8transmitEj>
 498:	8f e3       	ldi	r24, 0x3F	; 63
 49a:	9c e9       	ldi	r25, 0x9C	; 156
 49c:	01 97       	sbiw	r24, 0x01	; 1
 49e:	f1 f7       	brne	.-4      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 4a2:	00 00       	nop
	_delay_ms(10);
	wlan.transmit(0xFF);
 4a4:	6f ef       	ldi	r22, 0xFF	; 255
 4a6:	70 e0       	ldi	r23, 0x00	; 0
 4a8:	ce 01       	movw	r24, r28
 4aa:	0e 94 7e 01 	call	0x2fc	; 0x2fc <_ZN9wlanClass8transmitEj>
 4ae:	8f e3       	ldi	r24, 0x3F	; 63
 4b0:	9c e9       	ldi	r25, 0x9C	; 156
 4b2:	01 97       	sbiw	r24, 0x01	; 1
 4b4:	f1 f7       	brne	.-4      	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4b6:	00 c0       	rjmp	.+0      	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
 4b8:	00 00       	nop
	_delay_ms(10);
	//PORTB|=(1<<5);
	
}
 4ba:	df 91       	pop	r29
 4bc:	cf 91       	pop	r28
 4be:	08 95       	ret

000004c0 <_exit>:
 4c0:	f8 94       	cli

000004c2 <__stop_program>:
 4c2:	ff cf       	rjmp	.-2      	; 0x4c2 <__stop_program>
